// src/main.tsx
import React from 'react'
import ReactDOM from 'react-dom/client'
import { createBrowserRouter, RouterProvider, Navigate } from 'react-router-dom'
import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
import App from './App'
import './styles/tailwind.css'

// –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã (–µ—Å–ª–∏ —É —Ç–µ–±—è –∏—Ö –Ω–µ—Ç ‚Äî –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π)
import { AuthProvider } from '@/context/auth'
import { ToastProvider } from '@/components/Toast'

// —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–ª–µ–Ω–∏–≤–∞—è –ø–æ–¥–≥—Ä—É–∑–∫–∞)
const Dashboard      = React.lazy(() => import('./routes/Dashboard'))       // "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
const Athletes       = React.lazy(() => import('./routes/Athletes'))
const AthleteProfile = React.lazy(() => import('./routes/AthleteProfile'))
const WeeklyPlan     = React.lazy(() => import('./routes/WeeklyPlan'))
const Attendance     = React.lazy(() => import('./routes/Attendance'))
const Injuries       = React.lazy(() => import('./routes/Injuries'))
const InjuriesDetail = React.lazy(() => import('./routes/InjuriesDetail'))   // –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —É–¥–∞–ª–∏ —Å—Ç—Ä–æ–∫—É –∏ –º–∞—Ä—à—Ä—É—Ç
const Nutrition      = React.lazy(() => import('./routes/Nutrition'))
const Reports        = React.lazy(() => import('./routes/Reports'))

// —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–æ–∫/404 (–µ—Å–ª–∏ —Å–æ–∑–¥–∞–ª –ø–æ –º–æ–µ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏)
import ErrorPage from './routes/ErrorPage'
import NotFound from './routes/NotFound'

// ‚ö†Ô∏è –í–ê–ñ–ù–û: router –æ–±—ä—è–≤–ª—è–µ–º –û–î–ò–ù —Ä–∞–∑
const router = createBrowserRouter([
  {
    path: '/',
    element: <App />,
    errorElement: <ErrorPage />, // –∞–∫–∫—É—Ä–∞—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–æ–∫ –≤–º–µ—Å—Ç–æ –∫—Ä–∞—Å–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
    children: [
      { index: true, element: <Navigate to="/dashboard" replace /> },
      { path: 'dashboard',    element: <React.Suspense fallback={<div>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>}><Dashboard/></React.Suspense> },
      { path: 'athletes',     element: <React.Suspense fallback={<div>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>}><Athletes/></React.Suspense> },
      { path: 'athletes/:id', element: <React.Suspense fallback={<div>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>}><AthleteProfile/></React.Suspense> },
      { path: 'weekly-plan',  element: <React.Suspense fallback={<div>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>}><WeeklyPlan/></React.Suspense> },
      { path: 'attendance',   element: <React.Suspense fallback={<div>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>}><Attendance/></React.Suspense> },
      { path: 'injuries',     element: <React.Suspense fallback={<div>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>}><Injuries/></React.Suspense> },
      // —É–±–µ—Ä–∏ —ç—Ç–æ—Ç –º–∞—Ä—à—Ä—É—Ç, –µ—Å–ª–∏ –Ω–µ—Ç —Ñ–∞–π–ª–∞ InjuriesDetail.tsx
      { path: 'injuries/:id', element: <React.Suspense fallback={<div>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>}><InjuriesDetail/></React.Suspense> },
      { path: 'nutrition',    element: <React.Suspense fallback={<div>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>}><Nutrition/></React.Suspense> },
      { path: 'reports',      element: <React.Suspense fallback={<div>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>}><Reports/></React.Suspense> },

      // 404
      { path: '*', element: <NotFound /> },
    ],
  },
])

// React Query
const qc = new QueryClient()

// üö´ –ï—Å–ª–∏ —Ä–∞–Ω—å—à–µ –≤–∫–ª—é—á–∞–ª MSW ‚Äî –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ–º –µ–≥–æ –∑–¥–µ—Å—å (—á—Ç–æ–±—ã —Ö–æ–¥–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –±—ç–∫)
// async function enableMSW() {
//   const { worker } = await import('./mocks/browser')
//   await worker.start({ onUnhandledRequest: 'bypass' })
// }
// enableMSW().then(() => { ...render... })

// –†–µ–Ω–¥–µ—Ä
ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <QueryClientProvider client={qc}>
      <AuthProvider>
        <ToastProvider>
          <RouterProvider router={router} />
        </ToastProvider>
      </AuthProvider>
    </QueryClientProvider>
  </React.StrictMode>
)

